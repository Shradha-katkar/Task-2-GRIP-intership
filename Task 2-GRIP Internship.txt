# -*- coding: utf-8 -*-
"""Internship

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bqYK3Ic6p7mG5SvSOx7kWcoWUNJG-q59

# **Shradha Katkar**
GRIP-Data Science And Business Analytics Intern.

Task 2-Prediction using unsupervised ML.
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
sns.set()
from sklearn import datasets
from sklearn.cluster import  KMeans 
#importing the dataset


iris=datasets.load_iris()
df=pd.DataFrame(iris.data,columns=iris.feature_names)
df.head()

df.describe()

wcss=[]
# 'cl_num' is a that keeps track the highest number of clusters we want to use the WCSS method for we have it set  10 right now,but it is completely arbitrary.
cl_num=10
for i in range(1,cl_num):
  kmeans=KMeans(i)
  kmeans.fit(df)
  wcss_iter=kmeans.inertia_
  wcss.append(wcss_iter)
wcss

#Elbow method

number_clusters=range(1,cl_num)
plt.plot(number_clusters, wcss)
plt.title('The Elbow Method')
plt.xlabel('Number of clusters')
plt.ylabel('Within-cluster Sum of Squares')

""" **The optimum number of clusters is where the elbow occurs.In our graph it occurs at 3.
 Therefore,the optimum number of clusters is 3.**
"""

#Applying KMeans
model=KMeans(3)
cluster_pred=model.fit_predict(df)

cluster_pred

x = df.iloc[:,[0,1,2,3]].values

plt.scatter(x[cluster_pred==0,0],x [cluster_pred==0, 1], s = 50 , color = 'Blue', label='Iris-setosa')
plt.scatter(x[cluster_pred==1,0],x [cluster_pred==1,1], s = 50 , color = 'Green', label='Iris-versicolor')
plt.scatter(x[cluster_pred==2,0],x [cluster_pred==2,1], s = 50 , color = 'Red', label='Iris-virginica')

##centroid 
plt.scatter(model.cluster_centers_ [:,0], model.cluster_centers_[:, 1], s=100, color='yellow', label = 'Centroid') 
plt.legend()
